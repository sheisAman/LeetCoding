https://leetcode.com/problems/combinations/

/* first wrong code *.
class Solution {
private:
    vector<vector<int>> ans;
    vector<int> ds;
    int count = 0;
    void helper(vector<int> range, int k, int i){
        if(i > range.size()){
            return;
        }
        if(count == k){
            ans.push_back(ds);
            return;
        }
        
        for(int i = i; i < range.size(); i++){
            count = count + 1;
            ds.push_back(range[i]);
            helper(range, k, i + 1);
            count = count - 1;
            ds.pop_back();
        }
        
    }
    
public:
    vector<vector<int>> combine(int n, int k) {
        vector<int> range(n+1);
        for(int i = 0; i <=n; i++){
            range.push_back(i);   
        }
        helper(range,k, 1);
        return ans;
    }
};
